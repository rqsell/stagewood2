{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rebeccasell/Documents/projects/stagewood/frontend/web/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN } from \"../constants\";\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation(\n    $email: String!\n    $password: String!\n    $username: String!\n    $picture: String!\n    $name: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      username: $username\n      picture: $picture\n      name: $name\n    ) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const [formState, setFormState] = useState({\n    login: true,\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    picture: \"\",\n    name: \"\"\n  });\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: formState.email,\n      password: formState.password\n    },\n    onCompleted: ({\n      login\n    }) => {\n      localStorage.setItem(AUTH_TOKEN, login.token); //   history.push(\"/\");\n    }\n  });\n  const [signup] = useMutation(SIGNUP_MUTATION, {\n    variables: {\n      name: formState.name,\n      email: formState.email,\n      username: formState.username,\n      picture: formState.picture,\n      password: formState.password\n    },\n    onCompleted: ({\n      signup\n    }) => {\n      localStorage.setItem(AUTH_TOKEN, signup.token); //   history.push(\"/\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mv3\",\n      children: formState.login ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [!formState.login && /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.name,\n        onChange: e => setFormState({ ...formState,\n          name: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.email,\n        onChange: e => setFormState({ ...formState,\n          email: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.password,\n        onChange: e => setFormState({ ...formState,\n          password: e.target.value\n        }),\n        type: \"password\",\n        placeholder: \"Choose a safe password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.username,\n        onChange: e => setFormState({ ...formState,\n          username: e.target.value\n        }),\n        type: \"username\",\n        placeholder: \"anything you like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.picture,\n        onChange: e => setFormState({ ...formState,\n          picture: e.target.value\n        }),\n        type: \"picture\",\n        placeholder: \"anything you like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pointer mr2 button\",\n          onClick: formState.login ? login : signup,\n          children: formState.login ? \"login\" : \"create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pointer button\",\n          onClick: e => setFormState({ ...formState,\n            login: !formState.login\n          }),\n          children: formState.login ? \"need to create an account?\" : \"already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zCwjuDHCEKc1pbyVvdMjtSTJLus=\", false, function () {\n  return [useHistory, useMutation, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/rebeccasell/Documents/projects/stagewood/frontend/web/src/components/Login.js"],"names":["React","useState","useMutation","gql","useHistory","AUTH_TOKEN","SIGNUP_MUTATION","LOGIN_MUTATION","Login","history","formState","setFormState","login","email","password","username","picture","name","variables","onCompleted","localStorage","setItem","token","signup","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN } from \"../constants\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation(\n    $email: String!\n    $password: String!\n    $username: String!\n    $picture: String!\n    $name: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      username: $username\n      picture: $picture\n      name: $name\n    ) {\n      token\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\nconst Login = () => {\n  const history = useHistory();\n  const [formState, setFormState] = useState({\n    login: true,\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    picture: \"\",\n    name: \"\",\n  });\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: formState.email,\n      password: formState.password,\n    },\n    onCompleted: ({ login }) => {\n      localStorage.setItem(AUTH_TOKEN, login.token);\n      //   history.push(\"/\");\n    },\n  });\n  const [signup] = useMutation(SIGNUP_MUTATION, {\n    variables: {\n      name: formState.name,\n      email: formState.email,\n      username: formState.username,\n      picture: formState.picture,\n      password: formState.password,\n    },\n    onCompleted: ({ signup }) => {\n      localStorage.setItem(AUTH_TOKEN, signup.token);\n      //   history.push(\"/\");\n    },\n  });\n  return (\n    <div>\n      <h4 className=\"mv3\">{formState.login ? \"Login\" : \"Sign Up\"}</h4>\n      <div className=\"form\">\n        {!formState.login && (\n          <input\n            value={formState.name}\n            onChange={(e) =>\n              setFormState({\n                ...formState,\n                name: e.target.value,\n              })\n            }\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n        )}\n        <input\n          value={formState.email}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              email: e.target.value,\n            })\n          }\n          type=\"text\"\n          placeholder=\"Your email address\"\n        />\n        <input\n          value={formState.password}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              password: e.target.value,\n            })\n          }\n          type=\"password\"\n          placeholder=\"Choose a safe password\"\n        />\n        <input\n          value={formState.username}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              username: e.target.value,\n            })\n          }\n          type=\"username\"\n          placeholder=\"anything you like\"\n        />\n        <input\n          value={formState.picture}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              picture: e.target.value,\n            })\n          }\n          type=\"picture\"\n          placeholder=\"anything you like\"\n        />\n\n        <div className=\"flex mt3\">\n          <button\n            className=\"pointer mr2 button\"\n            onClick={formState.login ? login : signup}\n          >\n            {formState.login ? \"login\" : \"create account\"}\n          </button>\n          <button\n            className=\"pointer button\"\n            onClick={(e) =>\n              setFormState({\n                ...formState,\n                login: !formState.login,\n              })\n            }\n          >\n            {formState.login\n              ? \"need to create an account?\"\n              : \"already have an account?\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}