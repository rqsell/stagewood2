{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rebeccasell/Documents/projects/stagewood/frontend/web/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN } from \"../constants\";\nimport LinkList from \"./LinkList\";\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation(\n    $email: String!\n    $password: String!\n    $username: String!\n    $picture: String!\n    $name: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      username: $username\n      picture: $picture\n      name: $name\n    ) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst CreateAccount = () => {\n  _s();\n\n  const history = useHistory();\n  const [formStateTwo, setFormStateTwo] = useState({\n    login: true,\n    email: \"\",\n    password: \"\"\n  });\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: formState.email,\n      password: formState.password\n    },\n    onCompleted: ({\n      login\n    }) => {\n      localStorage.setItem(AUTH_TOKEN, login.token);\n      console.log(login.token); // <LinkList />;\n    }\n  });\n  const [signup] = useMutation(SIGNUP_MUTATION, {\n    variables: {\n      name: formState.name,\n      email: formState.email,\n      username: formState.username,\n      picture: formState.picture,\n      password: formState.password\n    },\n    onCompleted: ({\n      signup\n    }) => {\n      console.log(AUTH_TOKEN, signup.token);\n      localStorage.setItem(AUTH_TOKEN, signup.token); //   history.push(\"/\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [!formState.login && /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.name,\n        onChange: e => setFormState({ ...formState,\n          name: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.email,\n        onChange: e => setFormState({ ...formState,\n          email: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"Your email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.password,\n        onChange: e => setFormState({ ...formState,\n          password: e.target.value\n        }),\n        type: \"password\",\n        placeholder: \"Choose a safe password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.username,\n        onChange: e => setFormState({ ...formState,\n          username: e.target.value\n        }),\n        type: \"username\",\n        placeholder: \"anything you like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formState.picture,\n        onChange: e => setFormState({ ...formState,\n          picture: e.target.value\n        }),\n        type: \"picture\",\n        placeholder: \"anything you like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: formState.login ? login : signup,\n          children: formState.login ? \"login\" : \"create account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: e => setFormState({ ...formState,\n            login: !formState.login\n          }),\n          children: formState.login ? \"Create Account\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAccount, \"nq+sP58wlW44Fe1rTcl0Sgt4TSg=\", false, function () {\n  return [useHistory, useMutation, useMutation];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/rebeccasell/Documents/projects/stagewood/frontend/web/src/components/CreateAccount.js"],"names":["React","useState","useMutation","gql","useHistory","AUTH_TOKEN","LinkList","SIGNUP_MUTATION","LOGIN_MUTATION","CreateAccount","history","formStateTwo","setFormStateTwo","login","email","password","variables","formState","onCompleted","localStorage","setItem","token","console","log","signup","name","username","picture","e","setFormState","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN } from \"../constants\";\nimport LinkList from \"./LinkList\";\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation(\n    $email: String!\n    $password: String!\n    $username: String!\n    $picture: String!\n    $name: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      username: $username\n      picture: $picture\n      name: $name\n    ) {\n      token\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\nconst CreateAccount = () => {\n  const history = useHistory();\n  const [formStateTwo, setFormStateTwo] = useState({\n    login: true,\n    email: \"\",\n    password: \"\",\n  });\n\n  const [login] = useMutation(LOGIN_MUTATION, {\n    variables: {\n      email: formState.email,\n      password: formState.password,\n    },\n    onCompleted: ({ login }) => {\n      localStorage.setItem(AUTH_TOKEN, login.token);\n      console.log(login.token);\n      // <LinkList />;\n    },\n  });\n  const [signup] = useMutation(SIGNUP_MUTATION, {\n    variables: {\n      name: formState.name,\n      email: formState.email,\n      username: formState.username,\n      picture: formState.picture,\n      password: formState.password,\n    },\n    onCompleted: ({ signup }) => {\n      console.log(AUTH_TOKEN, signup.token);\n      localStorage.setItem(AUTH_TOKEN, signup.token);\n      //   history.push(\"/\");\n    },\n  });\n  return (\n    <div>\n      {/* <h4 className=\"mv3\">{formState.login ? \"Login\" : \"Sign Up\"}</h4> */}\n      <div className=\"form\">\n        {!formState.login && (\n          <input\n            value={formState.name}\n            onChange={(e) =>\n              setFormState({\n                ...formState,\n                name: e.target.value,\n              })\n            }\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n        )}\n        <input\n          value={formState.email}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              email: e.target.value,\n            })\n          }\n          type=\"text\"\n          placeholder=\"Your email address\"\n        />\n        <input\n          value={formState.password}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              password: e.target.value,\n            })\n          }\n          type=\"password\"\n          placeholder=\"Choose a safe password\"\n        />\n        <input\n          value={formState.username}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              username: e.target.value,\n            })\n          }\n          type=\"username\"\n          placeholder=\"anything you like\"\n        />\n        <input\n          value={formState.picture}\n          onChange={(e) =>\n            setFormState({\n              ...formState,\n              picture: e.target.value,\n            })\n          }\n          type=\"picture\"\n          placeholder=\"anything you like\"\n        />\n        <div className=\"buttonbox\">\n          <button className=\"button\" onClick={formState.login ? login : signup}>\n            {formState.login ? \"login\" : \"create account\"}\n          </button>\n          <button\n            className=\"button\"\n            onClick={(e) =>\n              setFormState({\n                ...formState,\n                login: !formState.login,\n              })\n            }\n          >\n            {formState.login ? \"Create Account\" : \"Login\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}